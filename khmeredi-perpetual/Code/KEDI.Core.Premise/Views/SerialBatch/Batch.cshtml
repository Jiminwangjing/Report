@*<style type="text/css">
    .ColumnsAutomatic {
        color: red;
        text-align: center;
    }
</style>*@
<body class="dx-viewport">
    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="form-label">@Localizer["Date From"]</label>
                <input type="date" class="form-control" id="datefrom" />
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["Date To"]</label>
                <input type="date" class="form-control" id="dateto" />
            </div>
            <div class="col-md-2">
                <label class="lable_branch">@Localizer["By Branch"]</label>
                <select type="text" class="form-control" id="bybranch">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["User Name"] </label>
                <select type="text" class="form-control" id="byuser">
                    <option value="0">All</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Warehouse"] </label>
                <select type="text" class="form-control" id="bywhid">
                    <option value="0">All</option>
                </select>
            </div>
            <div class="col-md-2 ">
                <button class="btn btn-xs btn-kernel mt-4" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>
        <br />
        <div id="gridContainer"></div>
        <div class="options">
            <div class="option">
                <div id="autoExpand"></div>
            </div>
        </div>
    </div>


</body>
<script>

    $(function () {
        //getWarehouse
        $.ajax({
            url: "/SerialBatch/GetWarehouse",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bywhid").append(data);
            }
        });
        //Get branch
        $.ajax({
            url: "/SerialBatch/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/SerialBatch/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });



        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var Wahouse_id = $("#bywhid").val();
            var user_id = $("#byuser").val();
            $.ajax({
                url: "/SerialBatch/GetBatch",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    WahouseID: Wahouse_id,
                    UserID: user_id,
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }
        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },

                paging: {
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [20, 50, 100, 150],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "InvoiceNo",
                        caption: "Doc.Type"
                    },
                    {
                        dataField: "Code",
                        caption: "Code"
                    },
                    
                    {
                        dataField: "BatchNo",
                        groupIndex: 0,
                        caption: "Batch"
                    },
                    
                    {
                        dataField: "KhmerName",
                        caption: " Item Name"
                    },
                    {
                        dataField: "BatchAttr1",
                        caption: "BatchAttr1"
                    },
                    {
                        dataField: "BatchAttr2",
                        caption: "BatchAttr2"
                    },

                    {
                        dataField: "Systemdate",
                        caption: "Systemdate"
                    },
                    {
                        dataField: "Expiredate",
                        caption: "Expiredate"
                    },
                    {
                        dataField: "Admisiondate",
                        caption: "Admisiondate"
                    },

                    {
                        dataField: "Process",
                        caption: "Process"
                    },
                  
                    {
                        dataField: "StockIn",
                        caption: "StockIn"
                    },
                    {
                        dataField: "StockOut",
                        caption: "StockOut",
                    },

                    {
                        dataField: "Transaction",
                        caption: "Status",
                    },

                ],
                summary: {
                    groupItems: [
                       
                        {
                            showInColumn: "StockOut",
                            column: 'TotalStockIn',
                            summaryType: 'max',
                            displayFormat: "Available:{0}",
                            alignByColumn: true,
                        },
                        {
                            showInColumn: "StockIn",
                            column: 'StockIn',
                            summaryType: 'max',
                            displayFormat: "TotalStockIn:{0}",
                            alignByColumn: true,
                        },
                        ]

                }





            }).dxDataGrid("instance");
            $("#autoExpand").dxCheckBox({
                value: true,
                text: "Expand All Groups",
                onValueChanged: function (data) {
                    dataGrid.option("grouping.autoExpandAll", data.value);
                }
            });
        }

    })



</script>


