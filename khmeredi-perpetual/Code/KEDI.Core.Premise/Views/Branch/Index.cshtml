@model Pagination<Branch>

@{



    ViewData["Title"] = "Index";
}

<input type="text" id="txtid" hidden />
<div class="card card-body">
    <div class="d-flex justify-content-between">
        <a asp-action="Create" class="btn btn-xs btn-kernel tbncrate" title="Create"> @Localizer["Create"]</a>
        <div class="group-search-boxes">
            <div id="text-search" class="wrap-search-box">
                <div class="wrap-input show">
                    <i id="i-search" class="i-search fas fa-search"></i>
                    <input class="ignore" id="search-branches" autocomplete="off" type="text"
                        placeholder="@Localizer["Search ..."]">
                    <i id="i-close" class="i-close far fa-times-circle"></i>
                </div>
                <div id="btn-search" class="btn-search" style="display: none;"><i class="fas fa-search"></i></div>
            </div>
        </div>
    </div>

    <div class="wrap-table myt1">
        <table id="list-branches">
            <thead>
                <tr>
                    <th>
                        @Localizer["Name"]
                    </th>
                    <th>
                        @Localizer["Company"]
                    </th>
                    <th>
                        @Localizer["Location"]
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        let $listView = ViewTable({
            keyField: "ID",
            selector: "#list-branches",
            paging: {
                enabled: false,
                pageSize: 10
            },
            visibleFields: [
                "Name",
                "Company",
                "Location",
            ],
            columns: [
                {
                    name: "Name",
                    on: {
                        "dblclick": function (e) {
                            location.href = "/Branch/Edit?id=" + e.key;

                        }
                    }
                }
            ]
        });
        searchBranch($listView);
        $("#search-branches").on("keyup", function () {
            searchBranch($listView, this.value);
        });

        function searchBranch($listView, keyword = "") {
            $.get("/Branch/GetBranch", {
                keyword: keyword
            }, function (branches) {
                $listView.clearRows();
                $listView.bindRows(branches);
            });
        }


    });
</script>
