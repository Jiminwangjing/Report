@{
    ViewData["Title"] = "Payment Means Summary View";
}

<head>
    <link href="~/Admin/DevReport/css/DevReport.css" rel="stylesheet" />
</head>

<body class="dx-viewport">
    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="lable_datefrom">@Localizer["Date From"]</label>
                <input type="date" class="input_datefrom" id="datefrom" />
            </div>
            <div class="col-md-2">
                <label class="lable_dateto">@Localizer["Date To"]</label>
                <input type="date" class="input_dateto" id="dateto" />
            </div>
            <div class="col-md-2">
                <label class="lable_branch">@Localizer["By Branch"]</label>
                <select type="text" class="input_branch" id="bybranch">
                    <option value="0">All Branch</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["User Name"] </label>
                <select type="text" class="input_user" id="byuser">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-2">

                <label class="lable_user">@Localizer["Payment Means"] </label>
                <select type="text" class="input_user" id="paymentid">
                    <option value="0">All</option>
                </select>

            </div>
            <div class="col-md-2">
                <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>

        <div id="gridContainer"></div>
        <div class="options">
        </div>
    </div>
</body>

<script>
    $(function () {
        const date = new Date();
        $("#datefrom")[0].valueAsDate = date;
        $("#dateto")[0].valueAsDate = date;
        $.get("/DevReport/GetPaymentMean", function (res) {
            console.log("res", res);
            let data = "<option value='0'>All</option>";
            res.forEach(i => {
                data += `<option value = "${i.ID}" >${i.Type}</option >`;
            })
            data += `<option value='-1'>Card</option>`;
            $("#paymentid").html(data);
        });
        filterData();
        //Get branch
        $.ajax({
            url: "/DevReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });

        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });

        $('#filter').click(function () {
            filterData(this);
        });

        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var user_id = $("#byuser").val();
            var paymentId = $("#paymentid").val();
            $.ajax({
                url: "/DevReport/PaymentMeansSummary",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    UserID: user_id,
                    paymentId,
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    cl
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }

        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                allowColumnResizing: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },
                columns: [
                    {
                        dataField: "PaymentMean",
                        caption: "Payment Means",
                    },
                    {
                        dataField: "Multipayment",
                        caption: "Total Payment",
                    },
                    {
                        dataField: "Remark",
                        width: 350
                    }
                ],

                summary:
                {
                    totalItems: [
                        {
                            showInColumn: "Multipayment",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "Discount Item   :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Multipayment",
                            column: "SDiscountTotal",
                            displayFormat: "Discount Total  :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Multipayment",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "Vat. Included   :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Multipayment",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "Grand Total SSC :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Multipayment",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "Grand Total LCC :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Remark",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Remark",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Remark",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Remark",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Remark",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        }
                    ]
                },
                export: {
                    enabled: true
                },

                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;
                    e.toolbarOptions.items.unshift({
                        location: "before",
                        template: function () {
                            return
                        }
                    },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                onClick: function () {
                                    dataGrid.refresh();
                                    filterData();
                                }
                            }
                        },
                    );
                }
            }).dxDataGrid("instance");
            $("#autoExpand").dxCheckBox({
                value: false,
                text: "Expand All Groups",
                onValueChanged: function (data) {
                    dataGrid.option("grouping.autoExpandAll", data.value);
                }
            });
        }
    })
</script>