
@{
    ViewData["Title"] = "Count Member Report";
}
<body class="dx-viewport">
    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="form-label">@Localizer["Date From"]</label>
                <input type="date" class="form-control" id="datefrom" />
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["Date To"]</label>
                <input type="date" class="form-control" id="dateto" />
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["By Branch"]</label>
                <select type="text" class="form-control" id="bybranch">
                    <option value="0">All Branch</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["User Name"] </label>
                <select type="text" class="form-control" id="byuser" asp-items="@ViewBag.UserLists">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-4 mt-4">
                <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">
                <label class="form-label">@Localizer["Time From"]</label>
                <input type="time" class="form-control" id="timefrom" />
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["Time To"]</label>
                <input type="time" class="form-control" id="timeto" />
            </div>
            <div class="col-md-2">
                <label class="form-label">@Localizer["Document Type"] </label>
                <select type="text" class="form-control" id="douType">
                    <option value="All"> All Type</option>
                    <option value="SP"> SP </option>
                    <option value="IN"> IN </option>
                </select>
            </div>
            <div class="col-md-2">
                <label>@Localizer["Price List"]</label>
                <select class="form-control" id="plid" asp-items="@ViewBag.PriceLists">
                    <option value="0"></option>
                </select>
            </div>
        </div>
        <br />
        <div id="gridContainer"></div>
    </div>


</body>
<script>

    $(function () {
        filterData();
        //Get branch
        $.ajax({
            url: "/DevReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });

        document.getElementById("timefrom").disabled = true;
        document.getElementById("timeto").disabled = true;

        $("#datefrom").on("change", function () {
            var df = this.value;
            $("#dateto").on("change", function () {
                var dt = this.value;
                if (df != 0 || df != null && dt != 0 || dt != null) {
                    document.getElementById("timefrom").disabled = false;
                    document.getElementById("timeto").disabled = false;
                } else {
                    document.getElementById("timefrom").disabled = true;
                    document.getElementById("timeto").disabled = true;
                }
            });
        });

        $("#dateto").on("change", function () {
            var dt = this.value;
            $("#datefrom").on("change", function () {
                var df = this.value;
                if (df != 0 || df != null && dt != 0 || dt != null) {
                    document.getElementById("timefrom").disabled = false;
                    document.getElementById("timeto").disabled = false;
                } else {
                    document.getElementById("timefrom").disabled = true;
                    document.getElementById("timeto").disabled = true;
                }
            });
        });

        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var user_id = $("#byuser").val();
            var time_from = $("#timefrom").val();
            var time_to = $("#timeto").val();
            var doctype = $("#douType").val();
            var plid = $("#plid").val();
            $.ajax({
                url: "/DevReport/CountMemberReport",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    UserID: user_id,
                    TimeFrom: time_from,
                    TimeTo: time_to,
                    DouType: doctype,
                    plid: plid
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }
        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                //editing: {
                //    mode: "row",
                //    allowUpdating: true
                //},
                //onEditingStart: function (e) {
                //    alert('edit')
                //},
                //onRowInserted: function (e) {
                //    e.component.navigateToRow(e.key);
                //},

                paging: {
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [20, 50, 100, 150],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "BranchName",
                        caption: "Branch Name"
                    },
                    {
                        dataField: "DouType",
                        //groupIndex: 0,
                        caption: "DouType"
                    },
                    {
                        dataField: "EmpName",
                        width: 150,
                        caption: "Emp. Name",
                    },
                    {
                        dataField: "ReceiptNo",
                        //width: 250,
                        caption: "Receipt No",

                    },
                    {
                        caption: "Posting Date",
                        dataField: "DateOut",
                        alignment: "right"
                    },
                    {
                        caption: "Time Out",
                        dataField: "TimeOut",
                        alignment: "right"
                    },
                    {
                        caption: "Discount Invoice",
                        dataField: "DiscountItem",
                        alignment: "right"
                    },
                     {
                        caption: "Discount Remark",
                        dataField: "DisRemark",
                        alignment: "right"
                    },
                    {
                        caption: "Currency",
                        dataField: "Currency",
                        alignment: "right"
                    },
                    {
                        caption: "Total",
                        dataField: "GrandTotal",
                        alignment: "right",
                        format: {
                            type: "fixedPoint",
                            precision: 2
                        }
                    },
                    {
                        caption: "Male",
                        dataField: "Male",
                        alignment: "right"
                    },
                    {
                        caption: "Female",
                        dataField: "Female",
                        alignment: "right"
                    },
                    {
                        caption: "Children",
                        dataField: "Children",
                        alignment: "right"
                    }
                ],

                summary: {
                    
                    totalItems: [
                        {
                            showInColumn: "EmpName",
                            column: "DateFrom",
                            summaryType: "max",
                            displayFormat: "Date From : {0}",
                            alignment: "left"
                        },

                        {
                            showInColumn: "ReceiptNo",
                            column: "DateTo",
                            summaryType: "max",
                            displayFormat: "Date To : {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "DateIn",
                            column: "SCount",
                            summaryType: "max",
                            displayFormat: "Count : {0} receipts",
                            alignment: "left"
                        },
                        
                        
                        {
                            showInColumn: "Male",
                            column: "SumMale",
                            summaryType: "max",
                            displayFormat: "{0} នាក់",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Female",
                            column: "SumFemale",
                            summaryType: "max",
                            displayFormat: "{0} នាក់",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Children",
                            column: "SumChildren",
                            summaryType: "max",
                            displayFormat: "{0} នាក់",
                            alignment: "right"
                        },
                        
                        {
                            showInColumn: "Total",
                            column: "GrandTotalBrand",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                            format: {
                                type: "fixedPoint",
                                precision: 2
                            }
                        },

                    ]

                },
                export: {
                    enabled: true
                },
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('count-member-report');

                    DevExpress.excelExporter.exportDataGrid({
                        component: e.component,
                        worksheet: worksheet,
                        topLeftCell: { row: 4, column: 1 }
                    }).then(function (dataGridRange) {
                        // header
                        var headerRow = worksheet.getRow(2);
                        headerRow.height = 30;
                        worksheet.mergeCells(2, 1, 2, 7);
                        headerRow.getCell(1).value = 'Count Member Report';
                        headerRow.getCell(1).font = { name: 'Segoe UI Light', size: 22 };
                        headerRow.getCell(1).alignment = { horizontal: 'center' };
                    }).then(function () {
                        // https://github.com/exceljs/exceljs#writing-xlsx
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'count-member-report.xlsx');
                        });
                    });
                    e.cancel = true;
                },
                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;
                    e.toolbarOptions.items.unshift({
                        location: "before",
                        template: function () {
                            return
                        }
                    },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                onClick: function () {
                                    dataGrid.refresh();
                                    filterData();
                                }
                            }
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "fas fa-file-pdf",
                                onClick: function () {
                                    printPdf();
                                }
                            },
                            title: 'Export to PDF'
                        }
                    );
                }

            }).dxDataGrid("instance");
        }
    })
    function printPdf() {
        var datefrom = $("#datefrom").val();
        var dateto = $("#dateto").val();
        var branch = $("#bybranch").val();
        var user = $("#byuser").val();
        var time_from = $("#timefrom").val();
        var time_to = $("#timeto").val();
        var plid = $("#plid").val();
        if (datefrom == "" || dateto == "") {
            $("#datefrom").css("border-color", "red");
            $("#dateto").css("border-color", "red");
            return;
        } else {
            $("#datefrom").css("border-color", "#DDDDDD");
            $("#dateto").css("border-color", "#DDDDDD");
            window.open(`/DevPrint/PrintCountMember?DateFrom=${datefrom}&DateTo=${dateto}&BranchID=${branch}&UserID=${user}&TimeFrom=${time_from}&TimeTo=${time_to}&plid=${plid}`, "_blank");
        }
    }
</script>

