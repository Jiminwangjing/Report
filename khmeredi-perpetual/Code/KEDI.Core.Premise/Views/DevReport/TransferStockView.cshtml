@{
    ViewData["Title"] = "TransferStockView";   
}

<head>
    <link href="~/Admin/DevReport/css/DevReport.css" rel="stylesheet" />
</head>
<body class="dx-viewport">
    <div class="card card-body">
            <div class="row">
                <div class="col-md-2">
                    <label class="lable_datefrom">@Localizer["Date From"]</label>
                    <input type="date" class="input_datefrom" id="datefrom" />
                </div>
                <div class="col-md-2">
                    <label class="lable_dateto">@Localizer["Date To"]</label>
                    <input type="date" class="input_dateto" id="dateto" />
                </div>
                <div class="col-md-2">
                    <label class="lable_branch">@Localizer["From Branch"]</label>
                    <select type="text" class="input_branch" id="frombranch">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="lable_branch">@Localizer["To Branch"] </label>
                    <select type="text" class="input_branch" id="tobranch">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <label class="lable_branch">@Localizer["From Warehouse"] </label>
                    <select type="text" class="input_branch" id="fromwarehousue">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="lable_branch">@Localizer["To Warehouse"] </label>
                    <select type="text" class="input_branch" id="towarehouse">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="lable_user">@Localizer["User Name"] </label>
                    <select type="text" class="input_user" id="byuser">
                        <option value="0"></option>
                    </select>
                </div>
            </div>
        <div id="gridContainer"></div>
        <div class="options">
            <div class="option">
                <div id="autoExpand"></div>
            </div>
        </div>
    </div>
</body>
<script>
    $(function () {
        filterData();
        //Get Branch From
        $.ajax({
            url: "/DevReport/GetBranchFrom",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#frombranch").append(data);
            }
        });
        //Get Branch To
        $.ajax({
            url: "/DevReport/GetBranchTo",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#tobranch").append(data);
            }
        });

        // Fillter From Branch
        $("#frombranch").on('change', function () {
            var branchid = $(this).val();
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            });
            $.ajax({
                url: "/DevReport/GetWarehouseFrom",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#fromwarehousue option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Name + '</option>';
                    });
                    $("#fromwarehousue").append(data);
                }
            });
        });
        //Filter To Branch 
        $("#tobranch").on('click', function () {
            var branchid = $(this).val();
            $.ajax({
                url: "/DevReport/GetWarehouseTo",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#towarehouse option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Name + '</option>';
                    });
                    $("#towarehouse").append(data);
                }
            });
        });

        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            });
            //Get Warehouse From
            $.ajax({
                url: "/DevReport/GetWarehouseFrom",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#bywarehouse option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Name + '</option>';
                    });
                    $("#bywarehouse").append(data);
                }
            });
        });
        //Get Warehouse To
        $("#tobranch").on('click', function () {
            var branchid = $(this).val();
            $.ajax({
                url: "/DevReport/GetWarehouseTo",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#towarehouse option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Name + '</option>';
                    });
                    $("#towarehouse").append(data);
                }
            });

        });

        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var datefrom = $("#datefrom").val();
            var dateto = $("#dateto").val();
            var from_branch = $("#frombranch").val();
            var to_branch = $("#tobranch").val();
            var from_warhouse = $("#fromwarehousue").val();
            var to_warehouse = $("#towarehouse").val();
            var user = $("#byuser").val();
            $.ajax({
                url: "/DevReport/TransferStockReport",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: datefrom,
                    DateTo: dateto,
                    FromBranchID: from_branch,
                    ToBranchID: to_branch,
                    FromWHID: from_warhouse,
                    ToWHID: to_warehouse,
                    UserID: user
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }

        //format number
        const formatNumber = amount => {
            return amount.toFixed(3).replace(/\d(?=(\d{3})+\.)/g, '$&,')
        }

        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                allowColumnResizing: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                //editing: {
                //    mode: "row",
                //    allowUpdating: true
                //},
                //onEditingStart: function (e) {
                //    alert('edit')
                //},
                //onRowInserted: function (e) {
                //    e.component.navigateToRow(e.key);
                //},

                paging: {
                    pageSize: 10
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "Number",
                        caption: "Trans. Num",
                        groupIndex: 0
                    },
                    {
                        dataField: "Barcode",
                        width:200,
                        caption: "Barcode"
                    },
                    {
                        dataField: "Code",
                        width: 200,
                        caption: "Code",
                    },
                    {
                        dataField: "KhmerName",
                        width: 220,
                        caption: "Item Name",
                    },
                    {
                        dataField: "Qty",
                        alignment: "left",
                        caption: "Qty"
                    },
                    {
                        dataField: "Cost",
                        width:130,
                        caption: "Cost"
                    },
                    {
                        dataField: "Uom",
                        caption: "Uom"
                    },
                    {
                        dataField: "ExpireDate",
                        caption: "Expire Date"
                    }
                ],
                summary: {
                    groupItems: [
                    //{
                    //    column: "NumberNo",
                    //    summaryType: "count",
                    //    displayFormat: "{0} items",
                    //},
                    {
                        showInColumn: "Code",
                        column: "PostingDate",
                        summaryType: "max",
                        displayFormat: "Posting Date: {0}",
                        showInGroupFooter: false,
                        alignByColumn: true
                    },
                    {
                        showInColumn: "KhmerName",
                        column: "DocDate",
                        summaryType: "max",
                        displayFormat: "Document Date: {0}",
                        showInGroupFooter: false,
                        alignByColumn: true
                    },
                    {
                        showInColumn: "Qty",
                        column: "Time",
                        summaryType: "max",
                        displayFormat: "Time: {0}",
                        showInGroupFooter: false,
                        alignByColumn: true
                    },
                    {
                        showInColumn: "ExpireDate",
                        column: "Subtotal",
                        summaryType: "max",
                        displayFormat: "Total: {0}",
                        showInGroupFooter: false,
                        alignByColumn: true
                    }
                    ],
                    totalItems: [
                        {
                            showInColumn: "Cost",
                            column: "GrandTotal",
                            summaryType: "sum",
                            displayFormat: "Grand Total SSC :",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Uom",
                            column: "Currency",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },

                        //Value
                        {
                            showInColumn: "ExpireDate",
                            column: "GrandTotal",
                            summaryType: "sum",
                            displayFormat: "{0}",
                            alignment: "left"
                        }
                    ]
                },
                export: {
                    enabled: true
                },
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('transfer-stock-report');

                    DevExpress.excelExporter.exportDataGrid({
                        component: e.component,
                        worksheet: worksheet,
                        topLeftCell: { row: 4, column: 1 }
                    }).then(function (dataGridRange) {
                        // header
                        var headerRow = worksheet.getRow(2);
                        headerRow.height = 30;
                        worksheet.mergeCells(2, 1, 2, 8);
                        headerRow.getCell(1).value = 'Transfer Stock Report';
                        headerRow.getCell(1).font = { name: 'Segoe UI Light', size: 22 };
                        headerRow.getCell(1).alignment = { horizontal: 'center' };

                        // footer
                        //var footerRowIndex = dataGridRange.to.row + 2;
                        //var footerRow = worksheet.getRow(footerRowIndex);
                        //worksheet.mergeCells(footerRowIndex, 1, footerRowIndex, 8);
                        //footerRow.getCell(1).value = 'www.wikipedia.org';
                        //footerRow.getCell(1).font = { color: { argb: 'BFBFBF' }, italic: true };
                        //footerRow.getCell(1).alignment = { horizontal: 'right' };

                    }).then(function () {
                        // https://github.com/exceljs/exceljs#writing-xlsx
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'transfer-stock-report.xlsx');
                        });
                    });
                    e.cancel = true;
                },
                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;
                    e.toolbarOptions.items.unshift({
                        location: "before",
                        template: function () {
                            return
                        }
                    },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                onClick: function () {
                                    dataGrid.refresh();
                                    filterData();
                                }
                            }
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "fas fa-file-pdf",
                                onClick: function () {
                                    var datefrom = $("#datefrom").val();
                                    var dateto = $("#dateto").val();
                                    var from_branch = $("#frombranch").val();
                                    var to_branch = $("#tobranch").val();
                                    var from_warhouse = $("#fromwarehousue").val();
                                    var to_warehouse = $("#towarehouse").val();
                                    var user = $("#byuser").val();


                                    if (datefrom == "" || dateto == "") {
                                        $("#datefrom").css("border-color", "red");
                                        $("#dateto").css("border-color", "red");
                                        return;
                                    } else {
                                        $("#datefrom").css("border-color", "#DDDDDD");
                                        $("#dateto").css("border-color", "#DDDDDD");
                                        window.open("/DevPrint/PrintTransferStock?DateFrom=" + datefrom + "&DateTo=" + dateto + "&FromBranchID=" + from_branch + "&ToBranchID=" + to_branch + "&FromWHID=" + from_warhouse + "&ToWHID=" + to_warehouse + "&UserID=" + user + "", "_blank");
                                    }
                                }
                            },
                            title: 'Export to PDF'
                        }
                    );
                }

            }).dxDataGrid("instance");
            $("#autoExpand").dxCheckBox({
                value: false,
                text: "Expand All Groups",
                onValueChanged: function (data) {
                    dataGrid.option("grouping.autoExpandAll", data.value);
                }
            });

            //function getGroupCount(groupField) {
            //    return DevExpress.data.query(reponse)
            //        .groupBy(groupField)
            //        .toArray().length;
            //}
        }

    })
</script>

