@{

    ViewData["Title"] = "Summary Sale Return Report";
}

<head>
    <link href="~/Admin/DevReport/css/DevReport.css" rel="stylesheet" />
</head>

<body class="dx-viewport">
    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Type Date "] </label>
                <select type="text" class="input_user" id="typrdate">
                    <option value="1">System Date</option>
                    <option value="2">Posting Date</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_datefrom">@Localizer["Date From"]</label>
                <input type="date" class="input_datefrom" id="datefrom" />
            </div>
            <div class="col-md-2">
                <label class="lable_dateto">@Localizer["Date To"]</label>
                <input type="date" class="input_dateto" id="dateto" />
            </div>
            <div class="col-md-2">
                <label class="lable_branch">@Localizer["By Branch"]</label>
                <select type="text" class="input_branch" id="bybranch">
                    <option value="0">All Branch</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Sale Person"] </label>
                <select type="text" class="input_user" id="byuser">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-1">
                <label class="lable_user">@Localizer["Delivery Person "] </label>
                <select type="text" class="input_user" id="bydelivery">
                    <option value="0"></option>
                </select>

            </div>
            <div class="col-md-1">
                <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label>@Localizer["Time From"]</label>
                <input type="Time" id="timefrom" style="width:100%" />
            </div>
            <div class="col-md-2">
                <label>@Localizer["Time To"]</label>
                <input type="Time" id="timeto" style="width:100%" />
            </div>
        </div>

    </div>
    <div id="gridContainer"></div>
    <div class="options">
        <div class="option">
            <div id="autoExpand"></div>
        </div>
    </div>
    </div>
</body>
<script>
    $(function () {
        filterData();
        //Get branch
        $.ajax({
            url: "/DevReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        //Get Emp-Delivery
        $.ajax({
            url: "/DevReport/GetEmpDelivery",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bydelivery").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });

        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var user_id = $("#byuser").val();
            var delivery_id = $("#bydelivery").val();
            var typedate = parseInt($("#typrdate").val());
            let timefrom = $("#timefrom").val();
            console.log(timefrom, "Min");
            let timeto = $("#timeto").val();
            console.log(timeto, "dog");
            $.ajax({
                url: "/DevReport/GetSaleRevenue",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    typedate: typedate,
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    UserID: user_id,
                    DeliveryID: delivery_id,
                    TimeFrom: timefrom,
                    TimeTo: timeto,
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    console.log(reponse);
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }
        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                columnChooser: {
                    enabled: true,
                    mode: 'select',
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                paging: {
                    pageSize: 20
                },
                pager: {
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true,
                    showNavigationButtons: true,
                    showPageSizeSelector: true,
                    visible: true,
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "ReceiptNo",
                        groupIndex: 0,
                        caption: "Nº",
                    },
                    {
                        dataField: "Invoice",
                        width: 90,
                        caption: "Invoice No",
                        alignment: "right",
                    },
                    {
                        dataField: "DateOut",
                        caption: "Posting Date",
                        width: 140,
                        alignment: "right"
                    },
                    {
                        dataField: "EmpName",
                        caption: "Sale By",
                        alignment: "right"
                    },
                    {
                        dataField: "ShipBy",
                        caption: "Delivery By",
                        width: 90,
                        alignment: "right"
                    },
                    {
                        dataField: "ItemCode",
                        caption: "Item Code",
                        alignment: "center",
    @* hidingPriority: 0, *@
                    },
                {
                    dataField: "ItemNameKhmer",
                    caption: "Item Name",
                    width: 150,
                },
                {
                    dataField: "ItemNameEng",
                    width: 150,
                    caption: "Item Name Eng",
                },
                {
                    dataField: "Qty",
                    width: 30,
                    caption: "Qty"
                },
                {
                    caption: "Uom",
                    dataField: "Uom",
                    alignment: "right"
                },
                {
                    caption: "Unit Price",
                    dataField: "UnitPrice",
                    alignment: "right"
                },
                {
                    caption: "Dis Item",
                    dataField: "DisItem",
                    width: 70,
                    alignment: "right"
                },
                {
                    caption: "Dis Total",
                    dataField: "Distotalin",
                    width: 70,
                    alignment: "right"
                },
    @* {
                caption: "Freight",
                dataField: "AmountFreightss",
                width: 70,
                alignment: "right"
                }, *@

                {
                    caption: "Currency",
                    dataField: "Currency",
                    width: 70,
                    alignment: "right"
                },
                {
                    caption: "Total",
                    dataField: "Total",
                    alignment: "right",
                },
                {
                    caption: "SubTotal",
                    dataField: "Hide",
                    alignment: "right",
                },
                {
                    caption: "Grand Total",
                    alignment: "right",
                },

                ],
            summary: {
                groupItems: [
                    {
                        showInColumn: "SubTotal",
                        column: "GrandTotal",
                        summaryType: "max",
                        displayFormat: "{0}",
                        showInGroupFooter: true,
                        alignByColumn: true
                    },
                    {
                        showInColumn: "Dis Item",
                        column: "AmountFreightss",
                        summaryType: "max",
                        displayFormat: "{0}",
                        showInGroupFooter: false,
                        alignByColumn: "right",
                    },
                    {
                        showInColumn: "SubTotal",
                        column: "GrandTotal",
                        summaryType: "max",
                        displayFormat: "{0}",
                        showInGroupFooter: false,
                        alignByColumn: "right",
                    },
                    {
                        showInColumn: "Unit Price",
                        column: "AmountFreightss",
                        summaryType: "max",
                        displayFormat: "Freight :  ",
                        showInGroupFooter: false,
                        alignByColumn: true
                    },

                ],
                    totalItems: [
                        {
                            showInColumn: "ItemNameKhmer",
                            column: "DateFrom",
                            summaryType: "max",
                            displayFormat: "Date From: {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "ItemNameEng",
                            column: "DateTo",
                            summaryType: "max",
                            displayFormat: "Date To: {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "Total",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "Discount Item :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "Discount Total :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "Vat. Included :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "Grand Total SSC :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "Grand Total LCC :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                        }
                    ]
            },
                export: {
                enabled: true
            },
            onExporting: function (e) {
                var workbook = new ExcelJS.Workbook();
                var worksheet = workbook.addWorksheet('summary-sale-report');

                DevExpress.excelExporter.exportDataGrid({
                    component: e.component,
                    worksheet: worksheet,
                    topLeftCell: { row: 4, column: 1 }
                }).then(function (dataGridRange) {
                    // header
                    var headerRow = worksheet.getRow(2);
                    headerRow.height = 30;
                    worksheet.mergeCells(2, 1, 2, 7);
                    headerRow.getCell(1).value = 'Summary Sale Report';
                    headerRow.getCell(1).font = { name: 'Segoe UI Light', size: 22 };
                    headerRow.getCell(1).alignment = { horizontal: 'center' };

                    // footer
                    //var footerRowIndex = dataGridRange.to.row + 2;
                    //var footerRow = worksheet.getRow(footerRowIndex);
                    //worksheet.mergeCells(footerRowIndex, 1, footerRowIndex, 8);
                    //footerRow.getCell(1).value = 'www.wikipedia.org';
                    //footerRow.getCell(1).font = { color: { argb: 'BFBFBF' }, italic: true };
                    //footerRow.getCell(1).alignment = { horizontal: 'right' };

                }).then(function () {
                    // https://github.com/exceljs/exceljs#writing-xlsx
                    workbook.xlsx.writeBuffer().then(function (buffer) {
                        saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'summary-sale-report.xlsx');
                    });
                });
                e.cancel = true;
            },
            onToolbarPreparing: function (e) {
                var dataGrid = e.component;
                e.toolbarOptions.items.unshift({
                    location: "before",
                    template: function () {
                        return
                    }
                },
                    {
                        location: "after",
                        widget: "dxButton",
                        options: {
                            icon: "refresh",
                            onClick: function () {
                                dataGrid.refresh();
                                filterData();
                            }
                        }
                    },
                    //{
                    //    location: "after",
                    //    widget: "dxButton",
                    //    options: {
                    //        icon: "fas fa-file-pdf",
                    //        onClick: function () {
                    //            printPdf();
                    //        }
                    //    },
                    //    title: 'Export to PDF'
                    //}
                );
            }

        }).dxDataGrid("instance");
    $("#autoExpand").dxCheckBox({
        value: false,
        text: "Expand All Groups",
        onValueChanged: function (data) {
            dataGrid.option("grouping.autoExpandAll", data.value);
        }
    });

            //function getGroupCount(groupField) {
            //    return DevExpress.data.query(reponse)
            //        .groupBy(groupField)
            //        .toArray().length;
            //}
        }

    })
    function printPdf() {
        var datefrom = $("#datefrom").val();
        var dateto = $("#dateto").val();
        var branch = $("#bybranch").val();
        var user = $("#byuser").val();
        var time_from = $("#timefrom").val();
        var time_to = $("#timeto").val();
        if (datefrom == "" || dateto == "") {
            $("#datefrom").css("border-color", "red");
            $("#dateto").css("border-color", "red");
            return;
        } else {
            $("#datefrom").css("border-color", "#DDDDDD");
            $("#dateto").css("border-color", "#DDDDDD");
            window.open("/DevPrint/PrintSummarySale?DateFrom=" + datefrom + "&DateTo=" + dateto + "&BranchID=" + branch + "&UserID=" + user + "&TimeFrom=" + time_from + "&TimeTo=" + time_to + "", "_blank");
        }
    }

</script>
