
@{
    ViewData["Title"] = "Inventory Audit Report";
}
<head>
    <link href="~/Admin/DevReport/css/DevReport.css" rel="stylesheet" />
</head>
<body class="dx-viewport">
    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="lable_branch">@Localizer["By Branch"]</label>
                <select type="text" class="input_branch" id="bybranch">
                    <option value="0">All</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Warehouse"] </label>
                <select type="text" class="input_user" id="bywhid">
                    <option value="0">All</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Uom Fiilter"] </label>
                <select type="text" class="input_user" id="uom">
                    <option value="0">All</option>
                    <option value="1">first</option>
                    <option value="2">Last</option>
                </select>
            </div>
            <div class="col-md-4 ">
                <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>
        <div id="gridContainer"></div>
        <div class="options">
            <div class="option">
                <div id="autoExpand"></div>
            </div>
        </div>
    </div>
</body>
<script>
    $(function () {
        filterData();
        //Get branch
        $.ajax({
            url: "/DevReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetWarehouse",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#bywhid option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Name + '</option>';
                    });
                    $("#bywhid").append(data);
                }
            })
        });
        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var whid = $("#bywhid").val();
            var uom = $("#uom").val();
            $.ajax({
                url: "/DevReport/GetInventoryByUom",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    WarehouseID: whid,
                    Uom : uom,
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }
        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                hoverStateEnabled: true,
                selection: {
                    mode: "single"
                },
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },

                paging: {
                    pageSize: 10
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },
                headerFilter: {
                    visible: true
                },
                columns: [
                    {
                        dataField: "WhCode",
                        caption: "Wh Code",
                        groupIndex: 0
                    },
                    {
                        caption: "Code",
                        dataField: "Code",
                        groupIndex:1
                    },
                    {
                        caption: "Barcode",
                        dataField: "Barcode",
                    },
                    {
                        caption: "Item Name 1",
                        dataField: "KhmerName",
                    },
                    {
                        caption: "Item Name 2",
                        dataField: "EnglishName",
                    },
                    {
                        caption: "InStock",
                        dataField: "InStock",                         
                    },
                    //{
                    //    caption: "Uom",
                    //    dataField: "Uom",                         
                    //},
                ],

                summary: {
                    groupItems: [
                        //{
                        //    showInColumn: "Item Name 1",
                        //    column: "KhmerName",
                        //    summaryType: "max",
                        //    displayFormat: "{0}",
                        //    showInGroupFooter: false,
                        //    alignByColumn: true
                        //},
                        //{
                        //    showInColumn: "Item Name 2",
                        //    column: "EnglishName",
                        //    summaryType: "max",
                        //    displayFormat: "{0}",
                        //    showInGroupFooter: false,
                        //    alignByColumn: true
                        //},
                        //{
                        //    showInColumn: "InStock",
                        //    column: "InStock",
                        //    summaryType: "max",
                        //    displayFormat: "{0}",
                        //    showInGroupFooter: false,
                        //    alignByColumn: true
                        //},
                        //{
                        //    showInColumn: "Uom",
                        //    column: "Uom",
                        //    summaryType: "min",
                        //    displayFormat: "{0}",
                        //    showInGroupFooter: false,
                        //    alignByColumn: true
                        //},
                        //{
                        //    showInColumn: "Item Name 1",
                        //    column: "WhCode",
                        //    summaryType: "max",
                        //    displayFormat: "{0}",
                        //    showInGroupFooter: false,
                        //    alignByColumn: false
                        //},
                    ],
                    totalItems: [
                       
                    ]

                },
                export: {
                    enabled: true
                },
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('stockin-warehouse-report');

                    DevExpress.excelExporter.exportDataGrid({
                        component: e.component,
                        worksheet: worksheet,
                        topLeftCell: { row: 4, column: 1 }
                    }).then(function (dataGridRange) {
                        // header
                        var headerRow = worksheet.getRow(2);
                        headerRow.height = 30;
                        worksheet.mergeCells(2, 1, 2, 10);
                        headerRow.getCell(1).value = 'Stock In Warehouse Report';
                        headerRow.getCell(1).font = { name: 'Segoe UI Light', size: 22 };
                        headerRow.getCell(1).alignment = { horizontal: 'center' };

                        // footer
                        //var footerRowIndex = dataGridRange.to.row + 2;
                        //var footerRow = worksheet.getRow(footerRowIndex);
                        //worksheet.mergeCells(footerRowIndex, 1, footerRowIndex, 8);
                        //footerRow.getCell(1).value = 'www.wikipedia.org';
                        //footerRow.getCell(1).font = { color: { argb: 'BFBFBF' }, italic: true };
                        //footerRow.getCell(1).alignment = { horizontal: 'right' };

                    }).then(function () {
                        // https://github.com/exceljs/exceljs#writing-xlsx
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'stockin-warehouse-report.xlsx');
                        });
                    });
                    e.cancel = true;
                },
                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;
                    e.toolbarOptions.items.unshift({
                        location: "before",
                        template: function () {
                            return
                        }
                    },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                onClick: function () {
                                    dataGrid.refresh();
                                    filterData();
                                }
                            }
                        }
                    );
                }

            }).dxDataGrid("instance");
            $("#autoExpand").dxCheckBox({
                value: false,
                text: "Expand All Groups",
                onValueChanged: function (data) {
                    dataGrid.option("grouping.autoExpandAll", data.value);
                }
            });

        }

    })
</script>

