
@using KEDI.Core.Premise.Models.ServicesClass.Report
@{
    ViewData["Title"] = "Data Selecion Export";
}

<head>
    <link href="~/Admin/DevReport/css/DevReport.css" rel="stylesheet" />
</head>
<style>
    .selection-summary {
        padding: 20px;
    }
    #calculateButton{
        color: white;
        background-color: #2471A3;
        margin-bottom: 2px;
        padding:5px;
        border-radius: 4px;
    }
</style>

<body class="dx-viewport">
    @model FormDataSelection
    <form action="/DevReport/GetAllSelectedDisplay" method="post" id="form-selection" enctype="application/x-www-form-urlencoded">
        <div class="wrap-table" hidden>
            <table id="list-data-selection">

            </table>
        </div>
        <button type="submit" id="calculateButton">Get statistics on the selected</button>
    </form>

    <div class="card card-body">
        <div class="row">
            <div class="col-md-2">
                <label class="lable_datefrom">@Localizer["Date From"]</label>
                <input type="date" class="input_datefrom" id="datefrom" />
            </div>
            <div class="col-md-2">
                <label class="lable_dateto">@Localizer["Date To"]</label>
                <input type="date" class="input_dateto" id="dateto" />
            </div>
            <div class="col-md-2">
                <label class="lable_branch">@Localizer["By Branch"]</label>
                <select type="text" class="input_branch" id="bybranch">
                    <option value="0">All Branch</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Sale Person"] </label>
                <select type="text" class="input_user" id="byuser">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="lable_user">@Localizer["Delivery Person "] </label>
                <select type="text" class="input_user" id="bydelivery">
                    <option value="0"></option>
                </select>
            </div>
            <div class="col-md-2">
                <button class="btn btn-xs btn-kernel" id="filter">@Localizer["Filter"]</button>
            </div>
        </div>

    </div>
    <div id="gridContainer"></div>
        <div class="options">
            <div class="option">
                <div id="autoExpand"></div>
            </div>
        </div>
    </div>

</body>
<script>
    $(function () {
        let __selectedItems = [];
        filterData();
        //Get branch
        $.ajax({
            url: "/DevReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        //Get Emp-Delivery
        $.ajax({
            url: "/DevReport/GetEmpDelivery",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bydelivery").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/DevReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });

        $('#filter').click(function () {
            filterData(this);
        });

        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var user_id = $("#byuser").val();
            var delivery_id = $("#bydelivery").val();
            $.ajax({
                url: "/DevReport/GetDataSelectionExport",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    UserID: user_id,
                    DeliveryID: delivery_id,
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }

        function bindGrid(reponse) {          
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                grouping: {
                    autoExpandAll: false,
                },
                columnChooser: {
                    enabled: true,
                    mode: 'select',
                },
                selection: {
                    mode: 'multiple',
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true,
                    showNavigationButtons: true,
                    showPageSizeSelector: true,
                    visible: true,
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "ReceiptNo",
                        groupIndex: 0,
                        caption: "NÂº",
                    },
                    {
                        dataField: "Invoice",
                        width: 90,
                        caption: "Invoice No",
                        alignment: "right",
                    },
                    {
                        dataField: "DateOut",
                        caption: "Posting Date",
                        width: 140,
                        alignment: "right"
                    },
                    {
                        dataField: "EmpName",
                        caption: "Sale By",
                        alignment: "right"
                    },
                    {
                        dataField: "ShipBy",
                        caption: "Delivery By",
                        width: 90,
                        alignment: "right"
                    },
                    {
                        dataField: "ItemCode",
                        caption: "Item Code",
                        alignment: "center",
                    },
                {
                    dataField: "ItemNameKhmer",
                    caption: "Item Name",
                    width: 150,
                },
                {
                    dataField: "ItemNameEng",
                    width: 150,
                    caption: "Item Name Eng",
                },
                {
                    dataField: "Qty",
                    width: 30,
                    caption: "Qty"
                },
                {
                    caption: "Uom",
                    dataField: "Uom",
                    alignment: "right"
                },
                {
                    caption: "Unit Price",
                    dataField: "UnitPrice",
                    alignment: "right"
                },
                {
                    caption: "Dis Item",
                    dataField: "DisItem",
                    width: 70,
                    alignment: "right"
                },
                {
                    caption: "Currency",
                    dataField: "Currency",
                    width: 70,
                    alignment: "right"
                },
                {
                    caption: "Total",
                    dataField: "Total",
                    alignment: "right",
                },
                {
                    caption: "SubTotal",
                    dataField: "Hide",
                    alignment: "right",
                },
                {
                    caption: "Grand Total",
                    alignment: "right",
                },
                ],
            summary: {
                groupItems: [
                    {
                        showInColumn: "Hide",
                        column: "GrandTotal",
                        summaryType: "max",
                        displayFormat: "{0}",
                        showInGroupFooter: true,
                        alignByColumn: true
                    }
                ],
                    totalItems: [
                        {
                            showInColumn: "ItemNameKhmer",
                            column: "DateFrom",
                            summaryType: "max",
                            displayFormat: "Date From: {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "ItemNameEng",
                            column: "DateTo",
                            summaryType: "max",
                            displayFormat: "Date To: {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "Total",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "Discount Item :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "Discount Total :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "Vat. Included :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "Grand Total SSC :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "Grand Total LCC :",
                            alignment: "Right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SGrandTotalSys",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                        },
                        {
                            showInColumn: "Grand Total",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                        }
                    ]
            },

            onSelectionChanged(selectedItems){
                const data = selectedItems.selectedRowsData;
                __selectedItems = data;
            },

            onToolbarPreparing: function (e) {
                var dataGrid = e.component;
                e.toolbarOptions.items.unshift({
                    location: "before",
                    template: function () {
                        return
                    }
                },
                    {
                        location: "after",
                        widget: "dxButton",
                        options: {
                            icon: "refresh",
                            onClick: function () {
                                dataGrid.refresh();
                                filterData();
                            }
                        }
                    },
                );
            }
        }).dxDataGrid("instance");
    
        $("#autoExpand").dxCheckBox({
            value: false,
            text: "Expand All Groups",
            onValueChanged: function (data) {
                dataGrid.option("grouping.autoExpandAll", data.value);
            }
        });
    }

        $('#calculateButton').dxButton({
            onClick: calculateStatistics,
        });

        function calculateStatistics () {
            previewAllSelected(__selectedItems)
        }

        function previewAllSelected (res){
            console.log("res", res)
            let listSelections = ViewTable({
                selector: "#list-data-selection",
                keyField: "LineID",
                dataSynced: true,
                model: {
                    DataSelections:[]
                }
            });
            
            for(let i = 0; i < res.length; i++){
                res[i].LineID = res[i].LineID + i;
                listSelections.addRow(res[i]);
            }
        }

    }) 
</script>