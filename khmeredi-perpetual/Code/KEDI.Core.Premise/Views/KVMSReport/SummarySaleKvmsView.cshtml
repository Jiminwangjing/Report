
@{
    ViewData["Title"] = "SummarySaleKvmsView";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<head>

    <style>
        .options {
            padding: 20px;
            /*margin-top: 20px;*/
            background-color: rgba(191, 191, 191, 0.15);
        }

        .caption {
            font-size: 18px;
            font-weight: 500;
        }

        .option {
            margin-top: 10px;
        }

        /*#gridContainer {
            max-height: 550px;
        }*/
        /*#gridContainer .dx-datagrid-header-panel {
            padding: 0;
            background-color: rgba(85, 149, 222, 0.6);
        }*/

        #gridContainer .dx-datagrid-header-panel .dx-toolbar {
            margin: 0;
            padding-right: 20px;
            background-color: transparent;
        }

        #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {
            height: 70px;
        }

        #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:not(:first-child) {
            background-color: rgba(103, 171, 255, 0.6);
        }

        #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:last-child {
            padding-right: 10px;
        }

        #gridContainer .dx-datagrid-header-panel .dx-selectbox {
            margin: 17px 10px;
        }

        #gridContainer .dx-datagrid-header-panel .dx-button {
            margin: 17px 0;
        }

        #gridContainer .informer {
            height: 70px;
            width: 130px;
            text-align: center;
            color: #fff;
        }

        #gridContainer .count {
            padding-top: 15px;
            line-height: 27px;
            margin: 0;
        }

        .input_datefrom, .input_dateto, .input_user, .input_branch, .input_timefrom, .input_timeto {
            -webkit-transition: all 0.30s ease-in-out;
            -moz-transition: all 0.30s ease-in-out;
            -o-transition: all 0.30s ease-in-out;
            outline: none;
            padding: 3px 0px 3px 3px;
            margin: 5px 1px 3px 0px;
            border: 1px solid #DDDDDD;
            width: 100%;
            min-width: 100%;
            height: 34px;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
            font-size: 14px;
            border-radius: 3px;
        }

        .lable_branch, .lable_datefrom, .lable_dateto, .lable_user, .lable_timefrom, .lable_timeto {
            font-family: Arial;
            font-size: 12px;
            font-weight: 700;
        }

        .btn-success, .btn-primary {
            margin-top: 28px;
            font-size: 12px;
            font-family: Arial;
            height: 28px;
        }

        table.dx-datagrid-table tr.dx-row.dx-column-lines.dx-header-row {
            background: #5F758B;
            color: #EEE;
            opacity: 1;
            line-height: 20px;
            transition: all .2s ease-out;
        }

        table tr {
            opacity: 1;
            line-height: 20px;
            transition: all .2s ease-out;
        }
    </style>

</head>
<body class="dx-viewport">
    <div class="demo-container">
        <div class="options">
            <div class="row">
                <div class="col-md-2">
                    <label class="lable_datefrom">@Localizer["Date From"]</label>
                    <input type="date" class="input_datefrom" id="datefrom" />
                </div>
                <div class="col-md-2">
                    <label class="lable_dateto">@Localizer["Date To"]</label>
                    <input type="date" class="input_dateto" id="dateto" />
                </div>
                <div class="col-md-2">
                    <label class="lable_branch">@Localizer["By Branch"]</label>
                    <select type="text" class="input_branch" id="bybranch">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="lable_user">@Localizer["User Name"] </label>
                    <select type="text" class="input_user" id="byuser">
                        <option value="0"></option>
                    </select>
                </div>
                <div class="col-md-4">
                    <button class="btn btn-xs btn-success" id="filter"><i class="fas fa-search"></i>@Localizer["Filter"]</button>
                </div>

            </div>

            <div class="row">
                <div class="col-md-2">
                    <label class="lable_timefrom">@Localizer["Time From"]</label>
                    <input type="time" class="input_timefrom" id="timefrom" />
                </div>
                <div class="col-md-2">
                    <label class="lable_timeto">@Localizer["Time To"]</label>
                    <input type="time" class="input_timeto" id="timeto" />
                </div>
            </div>


        </div>
        <div id="gridContainer"></div>
        <div class="options">
            <div class="option">
                <div id="autoExpand"></div>
            </div>
        </div>
    </div>
</body>
<script>

    $(function () {
        filterData();
        //Get branch
        $.ajax({
            url: "/KVMSReport/GetBranch",
            type: "Get",
            dataType: "Json",
            success: function (respones) {
                var data = '';
                $.each(respones, function (i, item) {
                    data +=
                        '<option value="' + item.ID + '">' + item.Name + '</option>';
                });
                $("#bybranch").append(data);
            }
        });
        $("#bybranch").on('change', function () {
            var branchid = $(this).val();
            // Get Employee
            $.ajax({
                url: "/KVMSReport/GetEmployee",
                type: "Get",
                dataType: "Json",
                data: { BranchID: branchid },
                success: function (respones) {
                    var data = '';
                    $("#byuser option:not(:first-child)").remove();
                    $.each(respones, function (i, item) {
                        data +=
                            '<option value="' + item.ID + '">' + item.Employee.Name + '</option>';
                    });
                    $("#byuser").append(data);
                }
            })
        });

        document.getElementById("timefrom").disabled = true;
        document.getElementById("timeto").disabled = true;

        $("#datefrom").on("change", function () {
            var df = this.value;
            $("#dateto").on("change", function () {
                var dt = this.value;
                if (df != 0 || df != null && dt != 0 || dt != null) {
                    document.getElementById("timefrom").disabled = false;
                    document.getElementById("timeto").disabled = false;
                } else {
                    document.getElementById("timefrom").disabled = true;
                    document.getElementById("timeto").disabled = true;
                }
            });
        });

        $("#dateto").on("change", function () {
            var dt = this.value;
            $("#datefrom").on("change", function () {
                var df = this.value;
                if (df != 0 || df != null && dt != 0 || dt != null) {
                    document.getElementById("timefrom").disabled = false;
                    document.getElementById("timeto").disabled = false;
                } else {
                    document.getElementById("timefrom").disabled = true;
                    document.getElementById("timeto").disabled = true;
                }
            });
        });

        $('#filter').click(function () {
            filterData(this);
        });
        function filterData(button) {
            let btn_filter = $(button).children("i.fa-search");
            var date_from = $("#datefrom").val();
            var date_to = $("#dateto").val();
            var branch_id = $("#bybranch").val();
            var user_id = $("#byuser").val();
            var time_from = $("#timefrom").val();
            var time_to = $("#timeto").val();
            $.ajax({
                url: "/KVMSReport/SummarySaleKVMSReport",
                type: 'GET',
                dataType: 'JSON',
                data: {
                    DateFrom: date_from,
                    DateTo: date_to,
                    BranchID: branch_id,
                    UserID: user_id,
                    TimeFrom: time_from,
                    TimeTo: time_to
                },
                beforeSend: function () {
                    btn_filter.addClass("fa-spinner fa-spin");
                },
                success: function (reponse) {
                    bindGrid(reponse);
                    btn_filter.removeClass("fa-spinner fa-spin");
                }
            });
        }
        function bindGrid(reponse) {
            var dataGrid = $("#gridContainer").dxDataGrid({
                dataSource: reponse,
                allowColumnReordering: true,
                showBorders: true,
                hoverStateEnabled: true,
                allowColumnResizing: true,
                columnResizingMode: "nextColumn",
                columnMinWidth: 50,
                columnAutoWidth: true,
                scrolling: {
                    columnRenderingMode: "virtual"
                },
                grouping: {
                    autoExpandAll: false,
                },
                searchPanel: {
                    visible: true
                },
                filterRow: {
                    visible: false,
                    applyFilter: "auto"
                },
                //editing: {
                //    mode: "row",
                //    allowUpdating: true
                //},
                //onEditingStart: function (e) {
                //    alert('edit')
                //},
                //onRowInserted: function (e) {
                //    e.component.navigateToRow(e.key);
                //},

                paging: {
                    pageSize: 10
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20, 50, 100],
                    showInfo: true
                },
                loadPanel: {
                    enabled: true
                },
                groupPanel: {
                    visible: false
                },

                columns: [
                    {
                        dataField: "ReceiptNo",
                        //width: 250,
                        caption: "Receipt Nº",

                    },
                    {
                        dataField: "EmpName",
                        //width: 350,
                        caption: "Emp. Name",
                    },
                    {
                        dataField: "QNo",
                        caption: "Q.Nº"
                    },
                    {
                        dataField: "CusName",
                        caption: "Cus.Name"
                    },
                    {
                        dataField: "Plate",
                        caption: "Plate"
                    },
                    {
                        dataField: "BrandName",
                        caption: "Brand"
                    },
                    {
                        dataField: "ModelName",
                        caption: "Model"
                    },
                    {
                        caption: "Date In",
                        dataField: "DateIn",
                    },
                    {
                        caption: "Time In",
                        dataField: "TimeIn",
                    },
                    {
                        caption: "Date Out",
                        dataField: "DateOut",
                    },
                    {
                        caption: "Time Out",
                        dataField: "TimeOut",
                    },
                    {
                        caption: "Currency",
                        dataField: "Currency"
                    },
                    {
                        caption: "Total",
                        dataField: "GrandTotal",
                        alignment: "right",
                        format: {
                            type: "fixedPoint",
                            precision: 2
                        }
                    }
                ],

                summary: {
                    totalItems: [
                        {
                            showInColumn: "EmpName",
                            column: "DateFrom",
                            summaryType: "max",
                            displayFormat: "Date From : {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "ReceiptNo",
                            column: "DateTo",
                            summaryType: "max",
                            displayFormat: "Date To : {0}",
                            alignment: "left"
                        },
                        {
                            showInColumn: "CusName",
                            column: "SCount",
                            summaryType: "max",
                            displayFormat: "Count : {0} receipts",
                            alignment: "left"
                        },
                        //{
                        //    showInColumn: "TimeOut",
                        //    column: "SSoldAmount",
                        //    summaryType: "max",
                        //    displayFormat: "Sold Amount :",
                        //    alignment: "left"
                        //},
                        {
                            showInColumn: "TimeOut",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "Discount Item   :",
                            alignment: "left"
                        },
                        {
                            showInColumn: "TimeOut",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "Discount Total  :",
                            alignment: "left"
                        },
                        {
                            showInColumn: "TimeOut",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "Vat. Included :",
                            alignment: "left"
                        },
                        {
                            showInColumn: "TimeOut",
                            column: "SGrandTotal_Sys",
                            summaryType: "max",
                            displayFormat: "Grand Total SSC :",
                            alignment: "left"
                        },
                        {
                            showInColumn: "TimeOut",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "Grand Total LCC :",
                            alignment: "left"
                        },
                        //value
                        //{
                        //    showInColumn: "Total",
                        //    column: "SSoldAmount",
                        //    summaryType: "max",
                        //    displayFormat: "{0}",
                        //    alignment: "right"
                        //},
                        {
                            showInColumn: "Total",
                            column: "SDiscountItem",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SDiscountTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SVat",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right"
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotal_Sys",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                            format: {
                                type: "decimal",
                                precision: 3
                            }
                        },
                        {
                            showInColumn: "Total",
                            column: "SGrandTotal",
                            summaryType: "max",
                            displayFormat: "{0}",
                            alignment: "right",
                            format: {
                                type: "decimal",
                                precision: 3
                            }
                        },

                    ]

                },
                export: {
                    enabled: true
                },
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('summary-sale-kvms-report');

                    DevExpress.excelExporter.exportDataGrid({
                        component: e.component,
                        worksheet: worksheet,
                        topLeftCell: { row: 4, column: 1 }
                    }).then(function (dataGridRange) {
                        // header
                        var headerRow = worksheet.getRow(2);
                        headerRow.height = 30;
                        worksheet.mergeCells(2, 1, 2, 12);
                        headerRow.getCell(1).value = 'Summary Sale KVMS Report';
                        headerRow.getCell(1).font = { name: 'Segoe UI Light', size: 22 };
                        headerRow.getCell(1).alignment = { horizontal: 'center' };

                        // footer
                        //var footerRowIndex = dataGridRange.to.row + 2;
                        //var footerRow = worksheet.getRow(footerRowIndex);
                        //worksheet.mergeCells(footerRowIndex, 1, footerRowIndex, 8);
                        //footerRow.getCell(1).value = 'www.wikipedia.org';
                        //footerRow.getCell(1).font = { color: { argb: 'BFBFBF' }, italic: true };
                        //footerRow.getCell(1).alignment = { horizontal: 'right' };

                    }).then(function () {
                        // https://github.com/exceljs/exceljs#writing-xlsx
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'summary-sale-kvms-report.xlsx');
                        });
                    });
                    e.cancel = true;
                },
                onToolbarPreparing: function (e) {
                    var dataGrid = e.component;
                    e.toolbarOptions.items.unshift({
                        location: "before",
                        template: function () {
                            return
                        }
                    },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                onClick: function () {
                                    dataGrid.refresh();
                                    filterData();
                                }
                            }
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "fas fa-file-pdf",
                                onClick: function () {
                                    printPdf();
                                }
                            },
                            title: 'Export to PDF'
                        }
                    );
                }

            }).dxDataGrid("instance");
            //$("#autoExpand").dxCheckBox({
            //    value: false,
            //    text: "Expand All Groups",
            //    onValueChanged: function (data) {
            //        dataGrid.option("grouping.autoExpandAll", data.value);
            //    }
            //});

            //function getGroupCount(groupField) {
            //    return DevExpress.data.query(reponse)
            //        .groupBy(groupField)
            //        .toArray().length;
            //}
        }

    })



    function printPdf() {
        var datefrom = $("#datefrom").val();
        var dateto = $("#dateto").val();
        var branch = $("#bybranch").val();
        var user = $("#byuser").val();
        var time_from = $("#timefrom").val();
        var time_to = $("#timeto").val();
        if (datefrom == "" || dateto == "") {
            $("#datefrom").css("border-color", "red");
            $("#dateto").css("border-color", "red");
            return;
        } else {
            $("#datefrom").css("border-color", "#DDDDDD");
            $("#dateto").css("border-color", "#DDDDDD");
            window.open("/DevPrint/PrintSummarySaleKVMS?DateFrom=" + datefrom + "&DateTo=" + dateto + "&BranchID=" + branch + "&UserID=" + user + "&TimeFrom=" + time_from + "&TimeTo=" + time_to + "", "_blank");
        }
    }

</script>

