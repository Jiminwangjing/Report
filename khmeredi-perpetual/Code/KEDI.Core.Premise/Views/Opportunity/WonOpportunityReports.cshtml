
@{
    ViewData["Title"] = "Index";
}
<input type="text" id="txtid" hidden />
<div class="card card-body">
    <div class="row">
        <div class="col-md-3">
            <p>Start Date </p>
        </div>
        <div class="col-md-3">
            <span>From</span>
            <input type="date" id="startdatefrom" />
        </div>
        <div class="col-md-3">
            <span>To</span>
            <input type="date" id="startdateto" />
        </div>
        <div class="col-md-2">
            <input type="checkbox" id="bpcode" />
            <span>BP Code</span>
        </div>
        <div class="row">
            <div class="col-md-1">
                <button id="filter" >Filter</button>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <p>Closing Date </p>
        </div>
        <div class="col-md-3">
            <span>From</span>
            <input type="date" id="closedatefrom" />
        </div>
        <div class="col-md-3">
            <span>To</span>
            <input type="date" id="closedateto" />
        </div>
        <div class="col-md-3">
            <input type="checkbox" id="saleemp" />
            <span>Sale Employee</span>
        </div>
    </div>
    <div class="wrap-table myt1">
        <table id="list-wonreports">
            <thead>
                <tr>
                    <th>
                        @Localizer["DayS Until Closing "]
                    </th>
                    <th>
                        @Localizer["No Of Opportunity"]
                    </th>
                    <th>
                        @Localizer["Total Amount"]
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>
@*//====model sale employee====*@
<div class="sale-emp" style="display: none;">

    <div class="group-search-boxes" style="display:flex;justify-content:flex-end">
        <div id="text-search" class="wrap-search-box ">
            <div class="wrap-input show">
                <i id="i-search" class="i-search fas fa-search"></i>
                <input class="ignore" id="search-bus" autocomplete="off" type="text" placeholder="@Localizer["Search ..."]">
                <i id="i-close" class="i-close far fa-times-circle"></i>
            </div>
            <div id="btn-search" class="btn-search" style="display: none;"><i class="fas fa-search"></i></div>
        </div>
    </div>

    <table id="list-saleemp" class="mt-3">
        <tr>
            <th>@Localizer["Name"]</th>

            <th>@Localizer["Action"]</th>
        </tr>
    </table>
</div>
@*//====model bpcode====*@
<div id="active-edit-content" style="display:none; height: 254px; ">
    <div class="row">
        <div class="col-md-3">
            <p>Code</p>

        </div>
        <div class="col-md-5 input-group ">
            <span>From</span>

            <input type="text" id="from_code" disabled />
            <div title="List Customer" id="show-list-itemster1" class="input-group-append">
                <i class="fas fa-plus-circle text-info input-group-icon"></i>
            </div>
        </div>
        <div class="col-md-4 input-group ">
            <span>To</span>
            <input type="text" id="to_code" disabled />
            <div title="List Customer" id="show-list-itemster2" class="input-group-append">
                <i class="fas fa-plus-circle text-info input-group-icon"></i>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <span>Bussiness Partner</span>
        </div>
        <div class="col-md-4">
            <select id="btype" class="form-control">
                <option value=""></option>
                <option value="All">All</option>
                <option value="Customer">Customer</option>
                <option value="Vendor">Vendor</option>
            </select>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-md-3">
            <span id="titlecus">Customer Group</span>
        </div>
        <div class="col-md-4">
            <select id="cusgroup" class="form-control" asp-items="ViewBag.A">
                <option value="0"></option>

            </select>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-md-3">
            <span id="titleven">Vendor Group</span>
        </div>
        <div class="col-md-4">
            <select id="vengroup" class="form-control" asp-items="ViewBag.B">
                <option value="0"></option>
            </select>
        </div>
    </div>
</div>
@*//MODEL BOX BP*@
<div class="bp_containers doctypeno_containers  widget-scrollbar" style="display: none;height:auto">
    <div class="group-search-boxes" style="display:flex;justify-content:flex-end">
        <div id="text-search" class="wrap-search-box ">
            <div class="wrap-input show">
                <i id="i-search" class="i-search fas fa-search"></i>
                <input class="ignore" id="search-bp" autocomplete="off" type="text" placeholder="@Localizer["Search ..."]">
                <i id="i-close" class="i-close far fa-times-circle"></i>
            </div>
            <div id="btn-search" class="btn-search" style="display: none;"><i class="fas fa-search"></i></div>
        </div>
    </div>
    <table id="list-bp" class="mt-3">
        <tr>

            <th>@Localizer["Code"]</th>
            <th>@Localizer["Name"]</th>
            <th>@Localizer["Action"]</th>
        </tr>
    </table>
</div>
<div hidden id="model-data">@Json.Serialize(Model)</div>
<input id="frombpid" hidden />
<input id="tobpid" hidden />
<input id="type" hidden/>
<input id="cus_gr" hidden/>
<input id="ven_gr" hidden/>
<input id="stfrom" hidden/>
<input id="stto" hidden/>
<input id="clfrom" hidden/>
<input id="clto" hidden/>
<script>
    $(document).ready(function () {
        //let _data = JSON.parse($("#model-data").text());
        //const disSetting = _data.GeneralSetting;
        //const num = NumberFormat({
        //    decimalSep: disSetting.DecimalSeparator,
        //    thousandSep: disSetting.ThousandsSep
        //});
       
        $("#startdatefrom").change(function () {
            $("#stfrom").val(this.value);

        })
        $("#startdateto").change(function () {
            $("#stto").val(this.value);
        })
        $("#closedatefrom").change(function () {
            $("#clfrom").val(this.value);
        })
        $("#closedateto").change(function () {
            $("#clto").val(this.value);
        })
      
        $("#btype").change(function () {
            $("#type").val(this.value);
            if (this.value == "Customer") {
                $("#vengroup").hide();
                $("#titleven").hide();
                $("#cusgroup").show();
                $("#titlecus").show();

            }
            if (this.value == "Vendor") {
                $("#cusgroup").hide();
                $("#titlecus").hide();
                $("#vengroup").show();
                $("#titleven").show();


            }
            if (this.value == "All") {
                $("#cusgroup").show();
                $("#titlecus").show();
                $("#vengroup").show();
                $("#titleven").show();
            }
        })
        $("#cusgroup").change(function () {
            $("#cus_gr").val(this.value);
        })
        $("#vengroup").change(function () {
            $("#ven_gr").val(this.value);
        })
       
        function datareports(data) {
            let $listView = ViewTable({
                keyField: "ID",
                selector: "#list-wonreports",
                paging: {
                    enabled: false,
                    pageSize: 10
                },
                visibleFields: [
                    "Day",
                    "OpportunityNo",
                    "PotentailAmount",
                ],
            });
            $listView.clearRows();
            $listView.bindRows(data);
        }
        $.ajax({
            url: "/Opportunity/GetDataWonReports",
            type: "Get",
            dataType: "Json",
            success: function (response) {
                datareports(response)
            }
        });

        $("#saleemp").click(function () {
            $.ajax({
                url: "/Opportunity/GetSaleEmpFilter",
                type: "Get",
                dataType: "Json",
                success: function (response) {
                    bindemp(response);
                }
            });
        })
        const saleemp = {
            Employee: new Array()
        }
        let arr_emp = [];
        function bindemp(res) {
            let dialog = new DialogBox({
                content: {
                    selector: ".sale-emp"
                },
                caption: "List Sale Employee"
            });
            dialog.reject(function () {
                arr_stage = [];
                dialog.shutdown();
            });
            dialog.invoke(function () {
                arr_emp
                const __listsaleemp = ViewTable({
                    keyField: "ID",
                    selector: "#list-saleemp",
                    paging: {
                        pageSize: 10,
                        enabled: true
                    },
                    visibleFields: ["Name", "Action"],
                    columns: [
                        {
                            name: "Action",
                            template: `<input type="checkbox">`,
                            on: {
                                "click": function (e) {

                                    const __checked = $(this).prop("checked") ? true : false;
                                    __listsaleemp.updateColumn(e.key, "Action", __checked);
                                    if (__checked) {
                                        arr_emp.push({ ID: e.key })
                                    }
                                    if (!__checked) {
                                        arr_emp = arr_emp.filter(i => i.ID != e.key);
                                    }
                                }
                            }
                        }
                    ]
                });
                __listsaleemp.bindRows(res)
            });
            dialog.confirm(function () {
                            
                dialog.shutdown();
            })
        }

        $("#bpcode").click(function () {
            bpcode()
        })
      
        function bpcode() {

            // Get the checkbox
            var checkbpcode = document.getElementById("bpcode");
            if (checkbpcode.checked == true) {
                let dialog = new DialogBox({
                    button: {
                        ok: {
                            text: "OK"
                        }
                    },
                    type: "ok-cancel",
                    content: {
                        selector: "#active-edit-content"
                    }
                });
                dialog.reject(function () {
                   
                    dialog.shutdown();
                });
                dialog.confirm(function () {
                    $("#bpcode").prop("checked", false);
                   
                    
                    dialog.shutdown();
                });
                dialog.invoke(function () {
                });
               
            }
        }
        $("#show-list-itemster1").click(function () {
            $.ajax({
                url: "/Opportunity/GetBPFilter",
                type: "Get",
                dataType: "Json",
                success: function (response) {
                    bindBPFrom(response);
                }
            });
        });
        function bindBPFrom(res) {
            let dialog = new DialogBox({
                content: {
                    selector: ".bp_containers"
                },
                caption: "Bussines Partner"
            });
            dialog.invoke(function () {
                const __listBussinesPartner = ViewTable({
                    keyField: "ID",
                    selector: "#list-bp",
                    paging: {
                        pageSize: 10,
                        enabled: true
                    },
                    visibleFields: ["Code", "Name", "Choose"],
                    actions: [
                        {
                            template: `<i class="fas fa-arrow-circle-down" id="close"></i>`,
                            on: {
                                "click": function (e) {

                                    $("#from_code").val(e.data.Code);
                                    $("#frombpid").val(e.data.ID);
                                    dialog.shutdown();
                                }
                            },
                        }
                    ]
                });
                __listBussinesPartner.bindRows(res)
            });
            dialog.confirm(function () {
                dialog.shutdown();
            })
        }
        $("#show-list-itemster2").click(function () {
            $.ajax({
                url: "/Opportunity/GetBPFilter",
                type: "Get",
                dataType: "Json",
                success: function (response) {
                    bindBPTo(response);
                }
            });
        });
        function bindBPTo(res) {
            let dialog = new DialogBox({
                content: {
                    selector: ".bp_containers"
                },
                caption: "Bussines Partner"
            });
            dialog.invoke(function () {
                const __listBussinesPartner = ViewTable({
                    keyField: "ID",
                    selector: "#list-bp",
                    paging: {
                        pageSize: 10,
                        enabled: true
                    },
                    visibleFields: ["Code", "Name", "Choose"],
                    actions: [
                        {
                            template: `<i class="fas fa-arrow-circle-down" id="close"></i>`,
                            on: {
                                "click": function (e) {

                                    $("#to_code").val(e.data.Code);
                                    $("#tobpid").val(e.data.ID);
                                    dialog.shutdown();
                                }
                            },
                        }
                    ]
                });
                __listBussinesPartner.bindRows(res)
            });
            dialog.confirm(function () {
                dialog.shutdown();
            })
        }
     
        $("#filter").click(function () {
            let bpfrom = $("#frombpid").val();
            let bpto = $("#tobpid").val();
            let type = $("#type").val();
            let cusgr = $("#cus_gr").val();
            let vengr = $("#ven_gr").val();
            let sartfrom = $("#stfrom").val();
            let startto = $("#stto").val();
            let closefrom = $("#clfrom").val();
            let closeto = $("#clto").val();
            const data = {
                BPFrom: bpfrom,
                BPTo: bpto,
                Type: type, 
                Cusgroup: cusgr, 
                Vengroup: vengr, 
                StartFrom: sartfrom, 
                StartTo: startto, 
                CloseFrom: closefrom, 
                CloseTo: closeto, 
                SaleEmp: arr_emp
            }
            saleemp.Employee = JSON.stringify(arr_emp);
            $.ajax({
                url: "/Opportunity/SearchByBpFilter",
                type: "Get",
                data: { strObject: JSON.stringify(data) },
                dataType: "Json",
                success: function (respones) {
                    datareports(respones)
                    arr_emp = [];
                    $("#saleemp").prop("checked", false);
                }
            })

        });

        $("#bpcode").click(function () {
            if ($(this).prop("checked")) {
                $("#saleemp").prop("checked", false);
               
            }
        })
        $("#saleemp").click(function () {
            if ($(this).prop("checked")) {
                $("#bpcode").prop("checked", false);
            }
        })
    });
</script>
